@using web.Services
@implements IDisposable
@inject ICartItemService CartItemService
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<!-- Mobile Nav (max width 767px)-->
<div class="mobile-nav">
    <!-- Navbar Brand -->
    <div class="amado-navbar-brand">
        <a href="">
            <img src="img/core-img/favicon.ico" alt="">
        </a>
    </div>
    <!-- Navbar Toggler -->
    <div class="amado-navbar-toggler">
        <span></span><span></span><span></span>
    </div>
</div>

<!-- Header Area Start -->
<header class="header-area clearfix">
    <!-- Close Icon -->
    <div class="nav-close">
        <i class="fa fa-close" aria-hidden="true"></i>
    </div>
    <!-- Logo -->
    <div class="logo">
        <a href="">
            <img src="img/core-img/logo.png" alt="">
        </a>
    </div>
    <!-- Amado Nav -->
    <nav class="amado-nav">
        <ul>
            <li>
                <a href="">Home</a>
            </li>
            <li>
                <a href="/ShoppingCart">Cart</a>
            </li>


            <AuthorizeView Roles="ADMIN">
                <li>
                    <a href="/admin/create-product">Create Product</a>
                </li>
                <li>
                    <a href="/admin/create-variant">Create Variant</a>
                </li>
                <li>
                    <a href="/admin/update-variant">Update Variant</a>
                </li>
                <li>
                    <a href="/admin/update-order">Update Order</a>
                </li>
            </AuthorizeView>
            <AuthorizeView>
                <Authorized>
                    <li>
                        <a href="/orders">Orders</a>
                    </li>
                    <li>
                        <a href="/logout">Logout</a>
                    </li>
                </Authorized>
                <NotAuthorized>
                    <li>
                        <a href="/login">Login</a>
                    </li>
                    <li>
                        <a href="/register">Register</a>
                    </li>
                </NotAuthorized>
            </AuthorizeView>
            
        </ul>


    </nav>
    <!-- Button Group -->
    <!-- Cart Menu -->
    <div class="cart-fav-search mb-100">
        <a href="/Shoppingcart" class="cart-nav"><img src="img/core-img/cart.png" alt=""> Cart <span>(@cartItemCount)</span></a>
    </div>
    <!-- Social Button -->
    <div class="social-info d-flex justify-content-between">
        <a href="#">
            <i class="fa fa-pinterest" aria-hidden="true"></i>
        </a>
        <a href="#">
            <i class="fa fa-instagram" aria-hidden="true"></i>
        </a>
        <a href="#">
            <i class="fa fa-facebook" aria-hidden="true"></i>
        </a>
        <a href="#">
            <i class="fa fa-twitter" aria-hidden="true"></i>
        </a>
    </div>
</header>


@code {
    private string? currentUrl;
    private int cartItemCount;
    private Action<int> _cartItemCountCallback;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        _cartItemCountCallback = count =>
        {
            cartItemCount = count;
            InvokeAsync(StateHasChanged);
        };
        CartItemService.SubscribeToChanges(_cartItemCountCallback);
        GetCartItemCount();
    }

    private async void GetCartItemCount()
    {
        var cart = await CartItemService.GetCartASync();
        cartItemCount = cart.Count;
        StateHasChanged();
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
        if (_cartItemCountCallback != null)
        {
            CartItemService.UnsubscribeFromChanges(_cartItemCountCallback);
        }
    }

}