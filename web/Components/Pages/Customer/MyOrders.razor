@page "/orders"
@inject IOrderService OrderService
@using sep3.orders.Model
@using web.Services
@rendermode InteractiveServer

<PageTitle>Orders</PageTitle>

<div class="container mt-5">
    @if (orders == null)
    {
        <p>Loading orders...</p>
    }
    else if (!orders.Any())
    {
        <p>No orders found.</p>
    }
    else
    {
        <!--
        @foreach (var order in orders)
        {
            <div class="card receipt-card p-4 mb-4">
                <h2 class="orange-text">Order #@order.Id</h2>
                <p>Date: <span class="fw-bold">Coming soon</span></p>
                <p>Order No.: <span class="fw-bold">@order.Id</span></p>
                <hr/>

                @if (order.ShoppingCart?.CartItems != null && order.ShoppingCart.CartItems.Any())
                {
                    foreach (var cartItem in order.ShoppingCart.CartItems)
                    {
                        <div class="mb-3">
                            <p>
                                @(cartItem.Product?.Name ?? "Unknown Product") 
                                <span class="float-end">@((cartItem.Product?.Price ?? 0) + ".-")</span>
                            </p>
                        </div>
                    }
                }
                else
                {
                    <p>No items in this order.</p>
                }

                <hr/>
                <h4 class="text-end">
                    @if (order.ShoppingCart?.CartItems != null && order.ShoppingCart.CartItems.Any())
                    {
                        var total = order.ShoppingCart.CartItems.Sum(ci => (ci.Product?.Price ?? 0) * ci.Quantity);
                        @total.ToString("F2") + ".-"
                    }
                    else
                    {
                        "0.-"
                    }
                </h4>
                <hr/>
                <h5 class="orange-text">Status: @order.StatusId</h5>
            </div>
        }-->
    }
</div>

@code {
    private int customerId = 1;
    private List<Order> orders { get; set; }

}
